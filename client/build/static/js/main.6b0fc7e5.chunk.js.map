{"version":3,"sources":["img/notedlogo_md.png","components/layout/spinner.gif","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alert.js","components/layout/Spinner.js","actions/note.js","components/notes/NoteCard.js","components/notes/Notes.js","components/tabs/Dashboard.js","components/notes/CodeCard.js","components/notes/Code.js","components/tabs/CodeTab.js","components/notes/CreateNote.js","components/layout/NotFound.js","components/routing/PrivateRoute.js","components/routing/Routes.js","reducers/alert.js","reducers/auth.js","reducers/note.js","reducers/index.js","store.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","setAlert","msg","alertType","timeout","arguments","length","undefined","dispatch","id","uuid","v4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","localStorage","get","sent","data","t0","stop","_x","apply","this","connect","state","auth","logout","_ref$auth","isAuthenticated","loading","authLinks","react_default","createElement","className","role","aria-label","react_router_dom","to","src","logo","width","height","onClick","href","guestLinks","class","react","react_router","register","_ref2","name","email","password","_ref3","_callee2","config","body","errors","_context2","Content-Type","JSON","stringify","post","response","forEach","error","_x2","_useState","useState","confirmPassword","_useState2","slicedToArray","formData","setFormData","onChange","e","objectSpread","defineProperty","target","value","onSubmit","preventDefault","placeholder","required","minLength","login","_ref4","_callee3","_context3","_x3","alerts","alert","map","key","concat","Spinner","spinner","style","margin","display","alt","getNotes","category","statusText","status","deleteNote","delete","_ref$note","note","_id","title","date","dist_default","format","useEffect","singlenote","notes_NoteCard","user","notes_Notes","notes_CodeCard","notes_Code","createNote","history","edit","push","console","log","NotFound","Component","component","rest","objectWithoutProperties","assign","render","props","Routes","layout_Alert","exact","path","Register","Login","routing_PrivateRoute","Dashboard","CodeTab","CreateNote","initialState","getItem","combineReducers","action","toConsumableArray","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","es","layout_Navbar","Landing","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.6b0fc7e5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/notedlogo_md.019d8541.png\";","module.exports = __webpack_public_path__ + \"static/media/spinner.7b32b7b8.gif\";","import uuid from 'uuid';\nimport { SET_ALERT, REMOVE_ALERT } from './types';\n\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\n  const id = uuid.v4();\n  dispatch({\n    type: SET_ALERT,\n    payload: { msg, alertType, id }\n  });\n\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n};\n","export const SET_ALERT = \"SET_ALERT\";\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\n\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\n\nexport const GET_NOTES = \"GET_NOTES\";\nexport const DELETE_NOTE = \"DELETE_NOTE\";\nexport const NOTE_ERROR = \"NOTE_ERROR\";\n","import axios from 'axios';\n\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['x-auth-token'] = token;\n  } else {\n    delete axios.defaults.headers.common['x-auth-token'];\n  }\n};\n\nexport default setAuthToken;\n","import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT\n} from \"./types\";\nimport setAuthToken from \"../utils/setAuthToken\";\n\n// Load User\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get(\"/api/auth\");\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\n// Register User\nexport const register = ({ name, email, password }) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  const body = JSON.stringify({ name, email, password });\n\n  try {\n    const res = await axios.post(\"/api/users\", body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\n\n// Login User\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post(\"/api/auth\", body, config);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\n// Logout / Clear Profile\nexport const logout = () => dispatch => {\n  dispatch({ type: LOGOUT });\n};\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { logout } from \"../../actions/auth\";\nimport logo from \"../../img/notedlogo_md.png\";\n\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\n  const authLinks = (\n    <nav className='navbar' role='navigation' aria-label='main navigation'>\n      <div className='navbar-brand'>\n        <Link to='/'>\n          <a className='navbar-item'>\n            <img src={logo} width='112' height='28' />\n          </a>\n        </Link>\n      </div>\n      <div className='navbar-menu'>\n        <div className='navbar-start'>\n          <Link to='/dashboard'>\n            <a className='navbar-item'>Notes</a>\n          </Link>\n          <Link to='/code'>\n            <a className='navbar-item'>Code</a>\n          </Link>\n          <Link to='/create'>\n            <a className='navbar-item'>New Note </a>\n          </Link>\n        </div>\n      </div>\n\n      <div className='navbar-end'>\n        <div className='navbar-item'>\n          <div className='buttons'>\n            <a className='button is-dark' onClick={logout} href='#!'>\n              Logout\n            </a>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n\n  const guestLinks = (\n    <nav className='navbar' role='navigation' aria-label='main navigation'>\n      <div className='navbar-brand'>\n        <Link to='/'>\n          <a className='navbar-item'>\n            <img src={logo} width='112' height='28' />\n          </a>\n        </Link>\n      </div>\n      <div className='navbar-end'>\n        <div className='navbar-item'>\n          <div className='buttons'>\n            <Link to='/login'>\n              <a class='button is-warning'>Sign In</a>\n            </Link>\n            <Link to='/register'>\n              <a class='button is-light'>Register</a>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n\n  return (\n    <Fragment>\n      {!loading && (\n        <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(Navbar);\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport logo from \"../../img/notedlogo_md.png\";\n\nconst Landing = ({ isAuthenticated }) => {\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n\n  return (\n    <section className='hero is-warning is-fullheight'>\n      <div className='hero-body'>\n        <div className='container has-text-centered'>\n          <h1 className='title'>\n            <img src={logo} width='400' />\n          </h1>\n          <h2 className='subtitle'>\n            <strong>Notes and Code Snippets Simplified</strong>\n          </h2>\n          <h2 className='subtitle'>Built with MERN</h2>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nLanding.propTypes = {\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { setAlert } from \"../../actions/alert\";\nimport { register } from \"../../actions/auth\";\nimport PropTypes from \"prop-types\";\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  const { name, email, password, confirmPassword } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setAlert(\"Passwords do not match\", \"danger\");\n    } else {\n      register({ name, email, password });\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n\n  return (\n    <Fragment>\n      <div className='container is-vertical-center'>\n        <div className='tile is-parent'>\n          <article className='tile is-child notification is-warning'>\n            <p className='title'>Get started with Noted!</p>\n            <p className='subtitle'>Register here</p>\n            <div className='content'>\n              <form onSubmit={e => onSubmit(e)}>\n                <div className='field'>\n                  <p class='help'>We'll greet you with this name in the app!</p>\n                  <p className='control has-icons-left has-icons-right'>\n                    <input\n                      className='input'\n                      type='text'\n                      placeholder='Name'\n                      name='name'\n                      value={name}\n                      onChange={e => onChange(e)}\n                      required\n                    />\n                    <span className='icon is-small is-left'>\n                      <i className='fas fa-user'></i>\n                    </span>\n                  </p>\n                </div>\n                <div className='field'>\n                  <p className='control has-icons-left has-icons-right'>\n                    <input\n                      className='input'\n                      type='email'\n                      placeholder='Email'\n                      name='email'\n                      value={email}\n                      onChange={e => onChange(e)}\n                      required\n                    />\n                    <span className='icon is-small is-left'>\n                      <i className='fas fa-envelope'></i>\n                    </span>\n                  </p>\n                </div>\n                <div className='field'>\n                  <p className='control has-icons-left'>\n                    <input\n                      className='input'\n                      type='password'\n                      placeholder='Password'\n                      name='password'\n                      value={password}\n                      onChange={e => onChange(e)}\n                      minLength='8'\n                    />\n                    <span className='icon is-small is-left'>\n                      <i className='fas fa-lock'></i>\n                    </span>\n                  </p>\n                </div>\n                <div className='field'>\n                  <p className='control has-icons-left'>\n                    <input\n                      className='input'\n                      type='password'\n                      placeholder='Confirm Password'\n                      name='confirmPassword'\n                      value={confirmPassword}\n                      onChange={e => onChange(e)}\n                      minLength='8'\n                    />\n                    <span className='icon is-small is-left'>\n                      <i className='fas fa-lock'></i>\n                    </span>\n                  </p>\n                </div>\n                <div className='field'>\n                  <p className='control'>\n                    <button type='submit' className='button is-dark'>\n                      Register\n                    </button>\n                  </p>\n                </div>\n              </form>\n              <br />\n              <p className='my-1'>\n                Already have an account? <Link to='/login'> Sign In</Link>\n              </p>\n            </div>\n          </article>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(\n  mapStateToProps,\n  { setAlert, register }\n)(Register);\n","import React, { Fragment, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { login } from \"../../actions/auth\";\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const { email, password } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    login(email, password);\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n\n  return (\n    <Fragment>\n      <div className='container is-vertical-center'>\n        <div className='tile is-parent'>\n          <article className='tile is-child notification is-warning'>\n            <p className='title'>Welcome back to Noted!</p>\n            <p className='subtitle'>Sign in here</p>\n            <div className='content'>\n              <form onSubmit={e => onSubmit(e)}>\n                <div className='field'>\n                  <p className='control has-icons-left has-icons-right'>\n                    <input\n                      className='input'\n                      type='email'\n                      placeholder='Email'\n                      name='email'\n                      value={email}\n                      onChange={e => onChange(e)}\n                      required\n                    />\n                    <span className='icon is-small is-left'>\n                      <i className='fas fa-envelope'></i>\n                    </span>\n                  </p>\n                </div>\n                <div className='field'>\n                  <p className='control has-icons-left'>\n                    <input\n                      className='input'\n                      type='password'\n                      placeholder='Password'\n                      name='password'\n                      value={password}\n                      onChange={e => onChange(e)}\n                      minLength='6'\n                    />\n                    <span className='icon is-small is-left'>\n                      <i className='fas fa-lock'></i>\n                    </span>\n                  </p>\n                </div>\n                <div className='field'>\n                  <p className='control'>\n                    <button type='submit' className='button is-dark'>\n                      Sign In\n                    </button>\n                  </p>\n                </div>\n              </form>\n              <br />\n              <p className='my-1'>\n                Don't have an account? <Link to='/register'>Sign Up</Link>\n              </p>\n            </div>\n          </article>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(\n  mapStateToProps,\n  { login }\n)(Login);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Alert = ({ alerts }) =>\n  alerts !== null &&\n  alerts.length > 0 &&\n  alerts.map(alert => (\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n      {alert.msg}\n    </div>\n  ));\n\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(Alert);\n","import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nexport default () => (\n  <Fragment>\n    <img\n      src={spinner}\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\n      alt='Loading...'\n    />\n  </Fragment>\n);\n","import axios from \"axios\";\nimport { setAlert } from \"./alert\";\n\nimport { GET_NOTES, DELETE_NOTE, NOTE_ERROR } from \"./types\";\n\n// Get authenticated users notes\nexport const getNotes = category => async dispatch => {\n  try {\n    const res = await axios.get(`/api/notes/${category}`);\n\n    dispatch({\n      type: GET_NOTES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: NOTE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Create or update note\nexport const createNote = (\n  formData,\n  history,\n  edit = false\n) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    const res = await axios.post(\"/api/notes/\", formData, config);\n\n    dispatch({\n      type: GET_NOTES,\n      payload: res.data\n    });\n\n    dispatch(setAlert(edit ? \"Note updated\" : \"Note created\", \"success\"));\n\n    if (!edit) {\n      history.push(\"/dashboard\");\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: NOTE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Delete note\nexport const deleteNote = id => async dispatch => {\n  try {\n    await axios.delete(`/api/notes/${id}`);\n\n    dispatch({\n      type: DELETE_NOTE,\n      payload: id\n    });\n\n    dispatch(setAlert(\"Note deleted\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: NOTE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n","import React from \"react\";\nimport { deleteNote } from \"../../actions/note\";\nimport { connect } from \"react-redux\";\nimport Moment from \"react-moment\";\nimport PropTypes from \"prop-types\";\n\nconst NoteCard = ({\n  deleteNote,\n  note: { _id, title, body, date, category }\n}) => {\n  return (\n    <article className='message is-medium'>\n      <div className='message-header'>\n        <p>{title}</p>\n        <button\n          onClick={() => deleteNote(_id)}\n          className='delete is-medium'\n          aria-label='delete'></button>\n      </div>\n      <div className='message-body'>\n        <small>\n          <Moment format='MMM D, YYYY'>{date}</Moment>\n        </small>{\" \"}\n        <small> - In {category}</small>\n        <br />\n      </div>\n      <div className='message-body'>{body}</div>\n    </article>\n  );\n};\n\nNoteCard.propTypes = {\n  note: PropTypes.object.isRequired,\n  deleteNote: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteNote }\n)(NoteCard);\n","import React, { Fragment, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport NoteCard from \"./NoteCard\";\nimport { getNotes } from \"../../actions/note\";\n\nconst Notes = ({ getNotes, note: { note, loading } }) => {\n  useEffect(() => {\n    getNotes(\"Notes\");\n  }, [getNotes]);\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <div className=''>\n            {note.length > 0 ? (\n              note.map(singlenote => (\n                <NoteCard key={singlenote._id} note={singlenote} />\n              ))\n            ) : (\n              <Fragment>\n                <p>You have not yet created a note, please add some info</p>\n                <Link to='/create' className=''>\n                  Create A Note\n                </Link>\n              </Fragment>\n            )}\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nNotes.propTypes = {\n  getNotes: PropTypes.func.isRequired,\n  note: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  note: state.note\n});\n\nexport default connect(\n  mapStateToProps,\n  { getNotes }\n)(Notes);\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport Notes from \"../notes/Notes\";\n\nconst Dashboard = ({ auth: { user }, note: { note, loading } }) => {\n  return loading === true && note.length < 0 ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <p className='title is-3'>\n        <i className='fas fa-paperclip' /> Your note collection:\n      </p>\n      {note !== null ? (\n        <Fragment>\n          <Notes />\n        </Fragment>\n      ) : (\n        <Fragment>\n          <p>You have not yet created a note, please add some info</p>\n          <Link to='/create' className='btn btn-primary my-1'>\n            Create Note\n          </Link>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nDashboard.propTypes = {\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  note: state.note\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(Dashboard);\n","import React from \"react\";\nimport { deleteNote } from \"../../actions/note\";\nimport { connect } from \"react-redux\";\nimport Moment from \"react-moment\";\nimport PropTypes from \"prop-types\";\n\nconst CodeCard = ({\n  deleteNote,\n  note: { _id, title, body, date, category }\n}) => {\n  return (\n    <article className='message is-primary is-medium'>\n      <div className='message-header'>\n        <p>{title}</p>\n        <button\n          onClick={() => deleteNote(_id)}\n          className='delete is-medium'\n          aria-label='delete'></button>\n      </div>\n      <div className='message-body'>\n        <small>\n          <Moment format='MMM D, YYYY'>{date}</Moment>\n        </small>{\" \"}\n        <small> - In {category}</small>\n        <br />\n      </div>\n      <div className='message-body'>\n        {\" \"}\n        <pre className='prettyprint'>\n          <code className='language-groovy'>{body}</code>\n        </pre>\n      </div>\n    </article>\n  );\n};\n\nCodeCard.propTypes = {\n  note: PropTypes.object.isRequired,\n  deleteNote: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteNote }\n)(CodeCard);\n","import React, { Fragment, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport CodeCard from \"./CodeCard\";\nimport { getNotes } from \"../../actions/note\";\n\nconst Code = ({ getNotes, note: { note, loading } }) => {\n  useEffect(() => {\n    getNotes(\"Code\");\n  }, [getNotes]);\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <div className=''>\n            {note.length > 0 ? (\n              note.map(singlenote => (\n                <CodeCard key={singlenote._id} note={singlenote} />\n              ))\n            ) : (\n              <Fragment>\n                <p>You have not yet saved any code yet, add some here:</p>\n                <Link to='/create' className=''>\n                  Create New\n                </Link>\n              </Fragment>\n            )}\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nCode.propTypes = {\n  getNotes: PropTypes.func.isRequired,\n  note: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  note: state.note\n});\n\nexport default connect(\n  mapStateToProps,\n  { getNotes }\n)(Code);\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport Code from \"../notes/Code\";\n\nconst CodeTab = ({ auth: { user }, note: { note, loading } }) => {\n  return loading === true && note.length < 0 ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <p className='title is-3'>\n        <i className='fas fa-code' /> Your code collection:\n      </p>\n      {note !== null ? (\n        <Fragment>\n          <Code />\n        </Fragment>\n      ) : (\n        <Fragment>\n          <p>You have not yet created a note with code yet, please add one!</p>\n          <Link to='/create' className='btn btn-primary my-1'>\n            Create Note\n          </Link>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nCodeTab.propTypes = {\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  note: state.note\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(CodeTab);\n","import React, { useState, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createNote } from \"../../actions/note\";\n\nconst CreateNote = ({ createNote, history }) => {\n  const [formData, setFormData] = useState({\n    title: \"\",\n    body: \"\",\n    category: \"Notes\"\n  });\n\n  const { title, body, category } = formData;\n\n  const onChange = e => {\n    console.log(e.target.name);\n    console.log(e.target.value);\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = e => {\n    console.log(\"onSubmit createNote with formdata:\", formData);\n    e.preventDefault();\n    createNote(formData, history);\n  };\n\n  return (\n    <Fragment>\n      <div className='container is-vertical-center'>\n        <div className='tile is-parent'>\n          <article className='tile is-child notification is-warning'>\n            <p className='title'>Create a Note</p>\n            <p className='subtitle'>What's on your mind?</p>\n            <div className='content'>\n              <form onSubmit={e => onSubmit(e)}>\n                <div className='field'>\n                  <p className='control has-icons-left has-icons-right'>\n                    <input\n                      className='input'\n                      type='text'\n                      placeholder='Title'\n                      name='title'\n                      value={title}\n                      onChange={e => onChange(e)}\n                    />\n                    <span className='icon is-small is-left'>\n                      <i className='fas fa-paragraph'></i>\n                    </span>\n                  </p>\n                </div>\n                <div className='field'>\n                  <p className='control has-icons-left has-icons-right'>\n                    <textarea\n                      className='input'\n                      type='text'\n                      placeholder='Body'\n                      name='body'\n                      value={body}\n                      onChange={e => onChange(e)}\n                    />\n                    <span className='icon is-small is-left'>\n                      <i className='fas fa-align-left'></i>\n                    </span>\n                  </p>\n                </div>\n                <div className='field'>\n                  <p className='control has-icons-left'>\n                    <span className='select'>\n                      <select\n                        name='category'\n                        value={category}\n                        onChange={e => onChange(e)}>\n                        <option value='Notes'>Notes</option>\n                        <option value='Code'>Code</option>\n                      </select>\n                    </span>\n                    <span className='icon is-small is-left'>\n                      <i className='fas fa-coffee'></i>\n                    </span>\n                  </p>\n                </div>\n                <div className='field'>\n                  <p className='control'>\n                    <button type='submit' className='button is-dark'>\n                      Noted!\n                    </button>\n                  </p>\n                </div>\n              </form>\n            </div>\n          </article>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nCreateNote.propTypes = {\n  createNote: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { createNote }\n)(CreateNote);\n","import React, { Fragment } from 'react';\n\nconst NotFound = () => {\n  return (\n    <Fragment>\n      <h1 className='x-large text-primary'>\n        <i className='fas fa-exclamation-triangle' /> Page Not Found\n      </h1>\n      <p className='large'>Sorry, this page does not exist</p>\n    </Fragment>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated, loading },\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props =>\n      !isAuthenticated && !loading ? (\n        <Redirect to='/login' />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Register from \"../auth/Register\";\nimport Login from \"../auth/Login\";\nimport Alert from \"../layout/Alert\";\nimport Dashboard from \"../tabs/Dashboard\";\nimport CodeTab from \"../tabs/CodeTab\";\nimport CreateNote from \"../notes/CreateNote\";\nimport NotFound from \"../layout/NotFound\";\nimport PrivateRoute from \"../routing/PrivateRoute\";\n\nconst Routes = () => {\n  return (\n    <section className='container'>\n      <Alert />\n      <Switch>\n        <Route exact path='/register' component={Register} />\n        <Route exact path='/login' component={Login} />\n        <PrivateRoute exact path='/dashboard' component={Dashboard} />\n        <PrivateRoute exact path='/code' component={CodeTab} />\n        <PrivateRoute exact path='/create' component={CreateNote} />\n        <Route component={NotFound} />\n      </Switch>\n    </section>\n  );\n};\n\nexport default Routes;\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter(alert => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT\n} from \"../actions/types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  loading: true,\n  user: null\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_NOTES, DELETE_NOTE, NOTE_ERROR } from \"../actions/types\";\n\nconst initialState = {\n  note: [],\n  loading: true,\n  error: {}\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_NOTES:\n      return {\n        ...state,\n        note: payload,\n        loading: false\n      };\n    case DELETE_NOTE:\n      return {\n        ...state,\n        note: state.note.filter(note => note._id !== payload),\n        loading: false\n      };\n    case NOTE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport alert from \"./alert\";\nimport auth from \"./auth\";\nimport note from \"./note\";\n\nexport default combineReducers({\n  alert,\n  auth,\n  note\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Routes from './components/routing/Routes';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\nimport './App.css';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Landing} />\n            <Route component={Routes} />\n          </Switch>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}